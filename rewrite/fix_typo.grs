rule rm_goeswih {
  pattern { M -[goeswith]-> N; }
  commands {
    M.form = M.form + " " + N.form;
    del_node N;
  }
}

package correction {
  rule VerbForm {
    pattern { N[CorrectVerbForm<>none] }
    commands {
      N.VerbForm = N.CorrectVerbForm;
      del_feat N.CorrectVerbForm;
    }
  }

  rule rm_VerbForm {
    pattern { N[CorrectVerbForm=none] }
    commands {
      del_feat N.VerbForm;
      del_feat N.CorrectVerbForm;
    }
  }

  rule Number {
    pattern { N[CorrectNumber<>none] }
    commands {
      N.Number = N.CorrectNumber;
      del_feat N.CorrectNumber;
    }
  }

  rule rm_Number {
    pattern { N[CorrectNumber=none] }
    commands {
      del_feat N.Number;
      del_feat N.CorrectNumber;
    }
  }

  rule Gender {
    pattern { N[CorrectGender<>none] }
    commands {
      N.Gender = N.CorrectGender;
      del_feat N.CorrectGender;
    }
  }

  rule rm_Gender {
    pattern { N[CorrectGender=none] }
    commands {
      del_feat N.Gender;
      del_feat N.CorrectGender;
    }
  }

  rule Person {
    pattern { N[CorrectPerson<>none] }
    commands {
      N.Person = N.CorrectPerson;
      del_feat N.CorrectPerson;
    }
  }

  rule rm_Person {
    pattern { N[CorrectPerson=none] }
    commands {
      del_feat N.Person;
      del_feat N.CorrectPerson;
    }
  }

  rule Tense {
    pattern { N[CorrectTense<>none] }
    commands {
      N.Tense = N.CorrectTense;
      del_feat N.CorrectTense;
    }
  }

  rule rm_Tense {
    pattern { N[CorrectTense=none] }
    commands {
      del_feat N.Tense;
      del_feat N.CorrectTense;
    }
  }

  rule Mood {
    pattern { N[CorrectMood<>none] }
    commands {
      N.Mood = N.CorrectMood;
      del_feat N.CorrectMood;
    }
  }
  rule rm_Mood {
    pattern { N[CorrectMood=none] }
    commands {
      del_feat N.Mood;
      del_feat N.CorrectMood;
    }
  }

  rule Voice {
    pattern { N[CorrectVoice<>none] }
    commands {
      N.Voice = N.CorrectVoice;
      del_feat N.CorrectVoice;
    }
  }
  rule rm_Voice {
    pattern { N[CorrectVoice=none] }
    commands {
      del_feat N.Voice;
      del_feat N.CorrectVoice;
    }
  }

  rule CorrectSpaceAfter_no {
    pattern { N[CorrectSpaceAfter=No] }
    commands {
      N.SpaceAfter=No;
      del_feat N.CorrectSpaceAfter;
    }
  }
  rule CorrectSpaceAfter_yes {
    pattern { N[CorrectSpaceAfter=Yes] }
    commands {
      del_feat N.SpaceAfter;
      del_feat N.CorrectSpaceAfter;
    }
  }



  rule Typo {
    pattern { N[Typo=Yes, CorrectForm]; }
    commands {
      N.WrongForm = N.form;
      N.form = N.CorrectForm;
      N.wordform= N.form;
      del_feat N.Typo;
      del_feat N.CorrectForm;
    }
  }
}

strat main {
  Seq (
    Onf (rm_goeswih),
    Onf (correction)
  )
}