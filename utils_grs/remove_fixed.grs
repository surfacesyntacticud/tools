package fixed_del{

  rule adv_de_nom(feature $adv){
    pattern {
      PRED[cat=ADJ|VERB];
      NOM[cat<>VERB];
      ADV[cat=ADV,_MISC_mwepos,lemma=$adv];
      e1: PRED -[obl:mod]-> NOM;
      e2: NOM -[case]-> ADV;
      DE[cat=ADP,lemma=de];
      fixed_rel: ADV -[fixed]-> DE;
    }
    commands {
      del_edge fixed_rel; del_edge e1; del_edge e2;
      del_feat ADV._MISC_mwepos;
      add_edge PRED -[advmod]-> ADV;
      add_edge NOM -[case]-> DE; add_edge ADV -[obl:arg]-> NOM
    }
  }
#BEGIN
auprès
au-delà
près
#END

  rule adv_de_inf(feature $adv){
    pattern {
      PRED[cat=ADJ|VERB];
      INF[cat=VERB,VerbForm=Inf];
      ADV[cat=ADV,_MISC_mwepos,lemma=$adv];
      e1: PRED -[advcl]-> INF;
      e2: INF -[mark]-> ADV;
      DE[cat=ADP,lemma=de];
      fixed_rel: ADV -[fixed]-> DE;
    }
    commands {
      del_edge fixed_rel; del_edge e1; del_edge e2;
      del_feat ADV._MISC_mwepos;
      add_edge PRED -[advmod]-> ADV;
      add_edge INF -[mark]-> DE; add_edge ADV -[ccomp]-> INF
    }
  }
#BEGIN
afin
au-delà
près
#END

  rule adv_que(feature $adv){
    pattern {
      PRED[cat=ADJ|VERB];
      V[cat=VERB];
      ADV[cat=ADV,lemma=$adv,_MISC_mwepos];
      e1: PRED -[advcl]-> V;
      e2: V -[mark]-> ADV;
      QUE[cat=SCONJ,lemma=que];
      fixed_rel: ADV -[fixed]-> QUE
    }
    commands {
      del_edge fixed_rel; del_edge e1; del_edge e2;
      del_feat ADV._MISC_mwepos;
      add_edge PRED -[advmod]-> ADV;
      add_edge V -[mark]-> QUE; add_edge ADV -[ccomp]-> V
    }
  }
#BEGIN
afin
avant
#END

  rule prep_noun(feature $prep, $obj){
    pattern {
      PREP[cat=ADP,phon=$prep];
      N[cat=ADJ|NOUN,phon=$obj];
      fixed_rel: PREP -[fixed]-> N
    }
    commands {
      del_edge fixed_rel; shift PREP ==> N;
      add_edge N -[case]-> PREP
    }
  }
#BEGIN
à#merveille
en#général
en#masse
en#moyenne
en#particulier
en#principe
en#priorité
en#revanche
en#référence
en#somme
en#trombe
en#vrai
#END

  rule tout_en{
    pattern {
      ADV[cat=ADV,phon=tout|Tout];
      PREP[cat=ADP,phon=en];
      fixed_rel: ADV -[fixed]-> PREP;
      mark_rel: V -[mark]-> ADV
    }
    commands {
      del_edge fixed_rel;del_edge mark_rel;
      add_edge V -[mark]-> PREP;
      add_edge V -[advmod]-> ADV
    }
  }

  rule prep_que{
    pattern {
      PREP[cat=ADV,phon="après"|avant|depuis|"dès"|pendant|pour|sans];
      QUE[cat=SCONJ,phon=que];
      fixed_rel: PREP -[fixed]-> QUE;
      mark_rel: V -[mark]-> PREP
      }
    commands {
      del_edge fixed_rel;del_edge mark_rel;
      add_edge V -[mark]-> PREP;
      add_edge V -[mark]-> QUE
    }
  }

}
strat main { Onf (fixed_del) }
