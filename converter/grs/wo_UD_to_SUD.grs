include "UD_to_SUD.grs"

% Defined a strategy specific to Wolof: the universal strategy with one specific package wo_levels, called before reverse_relations.main.
strat wo_main {
  Seq (
    Onf (eud_to_ud),
    Onf (idioms),
    specific_expr_init,
    Onf (sub_relations),
    Onf (rel_extensions),
    Onf (relations),

    Onf (wo_pos_labels),
    Onf (wo_dep_labels),
    Onf (wo_levels_1),
    Onf (wo_levels_2),

    reverse_relations.main,
    Onf (shared_left_conj-dep),
    Onf (unshared_left_conj-dep),
    Onf (minimize_right_conj-dep),
    Onf (add_conj_emb),
    Onf (chained_relations),
    specific_expr_close,
    Onf (normalize),
  )
}

package wo_pos_labels {
  rule woon_pos {
    pattern { A[lemma="woon"] }
    commands { A.upos=PART; }
    }
    
    rule daldi_pos {
    pattern { A[form="daldi"] }
    commands { A.upos=AUX ; }
    }
    
    rule daldil {
    pattern { A[form="daldil"] }
    commands { A.lemma="daldi"; }
    }
    
    rule dal {
    pattern { A[form="dal", upos=ADV] }
    commands { A.lemma="daldi"; A.upos=AUX ; }
    }

  rule dina {
    pattern { A[lemma="di", form=re"din.*"] }
    commands { A.lemma="dina" }
    }
  }
  
  package wo_dep_labels {
  rule woon {
    pattern { e: V -[1=aux]-> A; A[lemma="woon"] }
    commands { del_edge e; add_edge V-[mod@tense]->A }
    }

  rule mod2aux {
    pattern { e: V -[advmod]-> A; A[upos=AUX] }
    commands { del_edge e; add_edge V-[aux]->A }
    }
    
    rule bu {
    pattern { e: V -[aux]-> A; A[lemma="bu", upos=AUX] }
    commands { A.upos=SCONJ ; del_edge e; add_edge V-[mark]->A }
    }
  }

package wo_levels_1 {
  rule mark_case_under_cop_left {
    pattern { e: V -[1=mark|case, !level]-> A; V -[1=cop]-> C; C << A; A << V }
    commands { e.level = 5 }
  }
  rule mark_case_under_cop_right {
    pattern { e: N -[1=mark|case, !level]-> A; N -[1=cop]-> C; N << A; A << C }
    commands { e.level = 5 }
  }

  % Specific to wolof
  rule na {
    pattern { e: V -[1=aux, !level]-> A; A[lemma="na"] }
    commands { e.level = 22 }  % 22 = more than other aux but less that case/mark
  }
  
  rule case_under_cop_right {%SK 16/1/2003 errors with la
    pattern { e: N -[1=case, !level]-> P; N -[1=cop]-> C; P << N ; N << C }
    commands { e.level = 5 }
  }

}

package wo_levels_2 { % after discussion 22/12/07 with SK
  rule mark_case {
    pattern { e: V -[1=mark|case, !level]-> A;  }
    commands { e.level = 30 }
  }
  rule aux {
    pattern { e: V -[1=aux, !level]-> A;  }
    commands { e.level = 20 }
  }
  rule cop {
    pattern { e: V -[1=cop, !level]-> A;  }
    commands { e.level = 10 }
  }

}

% package wo_levels {
%   rule na {
%     pattern { e: V -[1=aux, !level]-> A; A[lemma="na"] }
%     commands { e.level = 20 }
%   }
% }

%package wo_levels {
%  rule na {
%    pattern { e: V -[1=aux, !level]-> A; A[lemma="na"] }
%    commands { e.level = 8 }
%  }
%  rule aux {
%    pattern { e: V -[1=aux|cop, !level]-> A; A[lemma<>"na"] }
%    commands { e.level = 6 }
%  }
%}

