package post {
  rule cc_with_children {
    pattern { N1 -[cc]-> N2; e: N2 -[^fixed]-> N3; }
    commands {
      add_edge f: N1 -> N3;
      f.label = e.label;
      del_edge e
    }
  }

  rule case_with_children {
    pattern { N1 -[case]-> N2; e: N2 -[^fixed|reparandum|conj]-> N3; }
    commands {
      add_edge f: N1 -> N3;
      f.label = e.label;
      del_edge e
    }
  }

  rule compound_aux {
    pattern { e:N1 -[1=compound]-> N2; N2 [upos=AUX] }
    commands { del_edge e; add_edge N1 -[dep]-> N2 }
  }

}

strat main {
  Onf (post)
}