package Naija_pre_SUD_to_UD {

  rule na {
    pattern { X[lemma=na, upos = PART] }
    commands  { X.upos=AUX }
  }

  rule its {
    pattern { X[lemma="it's"|"dat's", upos = PART] }
    commands  { X.upos=VERB }
  }

  rule be {
    pattern { X[lemma=be, upos = VERB] ; X -[comp:pred]-> Y }
    commands  { X.upos=AUX }
  }

  rule rootisroot {
    pattern { ROOT[!upos] ; e: ROOT -[root@scrap]-> X }
    commands { del_edge e ; add_edge ROOT -[root]-> X }
  }

  % supprimer les liens @xxx qui sont dans la colonne 9
  rule deep { % remove enhanced relations
    pattern { e:N -[re"E:.*"]-> M }
    commands { del_edge e}
  }

  rule scrap {
    pattern { e: N -[deep=scrap]-> M; }
    commands { del_feat e.deep }
  }

  rule conjcoord {
  pattern { e: N -[conj:coord]-> M; }
  commands { del_edge e; add_edge N -[conj]-> M; }
  }
  rule conjappos {
  pattern { e: N -[conj:appos]-> M; }
  commands { del_edge e; add_edge N -[appos]-> M; }
  }
}

rule fixed_in_fixed {
  pattern { N1 -[deep=fixed]-> N2; e: N2 -> N3 }
  without { N2 -[deep=fixed]-> N3 }
  commands { add_edge e: N1 -> N3; del_edge e }
}

package revert {
  rule with_extpos {
    pattern { e: N -[deep=fixed, 1<>unk]-> M; N[_MISC_EXTPOS]; M << N  }
    commands {
      add_edge e:M -> N; shift N ==> M; del_edge e;
      M._MISC_EXTPOS = N._MISC_EXTPOS;
      del_feat N._MISC_EXTPOS;
    }
  }

  rule without_extpos {
    pattern { e: N -[deep=fixed, 1<>unk]-> M; N[!_MISC_EXTPOS]; M << N  }
    commands {
      add_edge e:M -> N; shift N ==> M; del_edge e;
    }
  }

}

rule chain {
  pattern {
    N0 -[deep=fixed, 1<>unk]-> N1;
    e: N0 -[deep=fixed, 1<>unk]-> N2;
    N1 << N2;
  }
  commands {
    add_edge e: N1 -> N2; del_edge e
  }
}

rule rename {
  pattern { e: N -[deep=fixed, 1<>unk]-> M; }
  commands { del_edge e; add_edge N -[unk@fixed]-> M; }
}

strat main {
  Seq (
    Onf (Naija_pre_SUD_to_UD),
    % change annotation of "SYNT" into "FIXED"
    Onf (fixed_in_fixed),
    Onf(revert),
    Onf (chain),
    Onf(rename)
  )
}