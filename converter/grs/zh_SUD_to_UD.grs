%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
include "SUD_to_UD.grs"

strat zh_SUD_to_UD_main { 
  Seq (
    Onf (zh_pre),
    Onf (comp),
    u_main,
    Onf (zh_post)
  )
}


package zh_pre {
  % Convert some forbidden AUX in UD to VERB （占 is like a copula in our opinion (meaning is "is")）
  rule convert_some_aux_to_verb {
    pattern {
      AUX[form="别"|"没办法"|"占", upos=AUX];
      e: AUX-[1=comp, 2=aux|pred]->DEP;
    }
    commands {
      e.label = "comp:obj";
      AUX.upos = VERB;
    }
  }

  % Convert shi_de_cleft to UD format
  rule shi_de_cleft {
    pattern {
      SHI[form="是", upos=AUX];
      e: SHI-[comp:cleft]->CLEFT;
      e2:SHI-[discourse]->DE;
    }
    commands {
      SHI.upos = VERB;
      e.label = "comp:obj";
      e2.label = "discourse:sp";
    }
  }

  % Convert shi_cleft to UD format
  rule shi_cleft {
    pattern {
      SHI[form="是", upos=AUX];
      e: SHI-[comp:cleft]->CLEFT;
    }
    without {
      e2:SHI-[discourse]->DE;
    }
    commands {
      SHI.upos = VERB;
      e.label = "comp:obj";
    }
  }

}

package comp {
  % convert comp:obl@temp and mod@temp to obl:tmod
  % TODO : decide if only one is necessary, if so, choose one
  % but we could have comp:obl@temp for ADP and mod@temp for other
  rule temporal_oblique {
    pattern { 
      e: N -[deep=temp]-> M;
    }
    commands { e.label = "obl:tmod" }
  }

    % convert comp:obl@temp and mod@temp to obl:tmod
  % TODO : decide if only one is necessary, if so, choose one
  % but we could have comp:obl@temp for ADP and mod@temp for other
  rule locative_oblique {
    pattern { 
      e: N -[deep=loc]-> M;
    }
    commands { e.label = "obl:lmod" }
  }

  rule obl {
    pattern { 
      e: N -[comp]-> M; N[form <> "的"];
      M [upos=ADP|PART];
    }
    commands { e.2 = obl }
  }

  rule obj {
    pattern { 
      e: N -[comp]-> M; N[form <> "的"];
      M [upos=NOUN|PROPN|PRON|VERB|AUX];
    }
    commands { e.2 = obj }
  }

  rule obj2 {
    pattern { 
      e: N -[comp]-> M; N[form = "的"];
    }
    commands { e.2 = obj }
  }

  rule resultative {
    pattern { 
      e: N -[comp:res]-> M;
    }
    commands { e.label = "compound:vv" }
  }
}

package zh_post {
  % TODO : check if still useful
  rule obl_mod {
    pattern {
      e: N -[obl:mod]-> M;
    }
    commands {
      del_feat e.2;
    }
  }

  % TODO : check if still useful
  rule dep_comp {
    pattern {
      e: N -[dep:comp]-> M;
    }
    commands {
      del_feat e.2;
    }
  }

  % Convert the UPOS and DEPREL of the 3 SUD aspect 着 了 过 (UD has them in AUX, altough they themselves think it doesnt belong in this class)
  rule convert_aspect {
    pattern {
      ASP[form="了"|"着"|"过"];
      e: VERB -[aspect]-> ASP;
    }
    commands {
      ASP.upos = AUX;
      e.label = aux;
    }
  }

  % Convert conj:redup as it doesn't exist in UD Mandarin
  rule convert_conj_redup {
    pattern {
      e: M-[conj:redup]->N;
    }
    commands {
      e.label = conj;
    }
  }

  % Convert the AUX zai (PROG) to a ADV
  rule convert_zai_aux {
    pattern {
      ZAI[form="在", upos=AUX];
      e: GOV-[aux]->ZAI;
    }
    commands {
      e.label = advmod;
      ZAI.upos = ADV;
    }
  }

  % Convert parataxis:new to flat (we think UD underspecify the new sentence relation as flat is used for other construction too)
  rule convert_new_sentences {
    pattern {
      e: SENT1-[parataxis:new]->SENT2;
    }
    commands {
      e.label = flat;
    }
  }

  % Convert you_de_cleft to UD format
  rule you_de_cleft {
    pattern {
      YOU[form="有"];
      e: YOU-[advcl:cleft]->CLEFT;
    }
    commands {
      e.label = "advcl";
    }
  }
}


