% The system SUD_to_SUD- flattens the internal structure of all multi-word expressions (MWE).
% Mark all nodes inside a MWE with the feature MWE=Yes.
package fixed_mark{
  rule head_mark{
    pattern{H[_MISC_EXTPOS, _MISC_Type=MWE, ! MWE]}
    commands{H.MWE=Yes}
  }

  rule dep_mark{
    pattern{ H[MWE=Yes]; H -[deep=fixed]-> D; D[!MWE]}
    commands{D.MWE=Yes}
  }
}

% Uniformize all fixed relations as unk@fixed relations.
rule fixed_uniformize{
  pattern{e: H -[deep=fixed]-> D; H[MWE=Yes]; D[MWE=Yes]}
  without{ H -[unk@fixed]-> D}
  commands{ add_edge H -[unk@fixed]-> D; del_edge e}
}

% Remove the mark  MWE=Yes from all nodes inside a MWE.
rule fixed_unmark{
  pattern{ N[MWE=Yes]}
  commands{del_feat N.MWE}
}

% Flatten the internal structure of all MWE. The resulting structure is a chain of unk@fixed relations from the left to the right.
package flatten{
% A fixed relation goes on the left.
  rule left_fixed{
    pattern{e: H -[unk@fixed]-> D; D << H}
    without{ H -[unk@fixed]-> D1; D1 << D}
    commands{
      shift_in H ==> D;
      add_edge D -[unk@fixed]-> H; del_edge e}
  }

% Two fixed relations with the same source go to the right.
  rule right_right_fixed{
    pattern{H -[unk@fixed]-> D1; e: H -[unk@fixed]-> D2;H << D1; D1 << D2}
    commands{ add_edge D1 -[unk@fixed]-> D2; del_edge e}
  }
}

% Raise the head features and external dependencies from the old MWE head to the new MWE head, which is the left-most token.
package raise{
% Raise the head features.
  rule head_raise{
    pattern{H -[unk@fixed]-> D; D[_MISC_EXTPOS,_MISC_Type=MWE]}
    commands{
     H._MISC_EXTPOS= D._MISC_EXTPOS; H._MISC_Type=MWE;
     del_feat D._MISC_EXTPOS; del_feat D._MISC_Type}
  }

% Raise the external dependencies.
  rule dep_raise{
    pattern{H -[unk@fixed]-> D; e: D -[^ unk@fixed]-> D1}
    commands{ add_edge e: H -> D1; del_edge e}
  }
}

strat main {
  Seq(
    Onf(fixed_mark),
    Onf(fixed_uniformize),
    Onf(fixed_unmark),
    Onf(flatten),
    Onf(raise)
    )
}

