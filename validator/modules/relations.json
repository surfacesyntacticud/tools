{
  "title": "Check consistency of relations",
  "items": [{
      "pattern": "pattern { N -[1<>aff|appos|cc|clf|comp|compound|conj|det|discourse|dislocated|flat|goeswith|list|mod|orphan|parataxis|punct|reparandum|root|subj|udep|unk|vocative]-> M }",
      "description": "Non valid SUD relations (see [guidelines](https://surfacesyntacticud.github.io/guidelines/u/))",
      "level": "error"
    },
    {
      "pattern": [
        "pattern { N -[1=subj]-> N1; N -[1=subj]-> N2; N1 << N2; }",
        "without { N -[subj@expl]-> N1}",
        "without { N -[subj@expl]-> N2}"
      ],
      "description": "Two `subj` relations with the same governor",
      "level": "warning"
    },
    {
      "pattern": [
        "pattern { GOV -[subj]-> DEP; GOV[upos <> VERB|AUX] }",
        "without { GOV.ExtPos=VERB }",
        "without { GOV.ExtPos=AUX }"
      ],
      "description": "The governor of a `subj` relation different from a verb or an auxiliary",
      "level": "warning"
    },
    {
      "pattern": [
        "pattern { N -[comp:obj]-> N1; N -[comp:obj]-> N2; N1 << N2; }",
        "without { N[PhraseType=Idiom]}"
      ],
      "description": "Two `comp:obj` relations with the same governor",
      "level": "warning"
    },
    {
      "pattern": "pattern { N -[1=flat]-> N1; N -[1=flat]-> N2; N1 << N2; }",
      "description": "Two `flat` relations with the same governor",
      "level": "error"
    },
    {
      "pattern": "pattern { GOV -[1=flat|conj]-> DEP; DEP << GOV }",
      "description": "No backward `flat` or `conj` relation",
      "level": "error"
    },
    {
      "pattern": "pattern { N1 -[unk@fixed]-> N2; N2 -[^unk@fixed]-> N3 }",
      "description": "Non `fixed` relation inside a `fixed` construction",
      "level": "error"
    },
    {
      "pattern": "pattern { GOV -[punct]-> DEP; DEP [upos <> PUNCT] }",
      "description": "`punct` relation without `PUNCT` upos",
      "level": "error"
    },
    {
      "pattern": "pattern { GOV -[1=comp,2=aux]-> DEP; GOV [upos <> AUX] }",
      "description": "`comp:aux` relation without `AUX` upos on the governor",
      "level": "error"
    },
    {
      "pattern": [
        "pattern { GOV -[1=det]-> DEP; DEP [upos <> DET|NUM] }",
        "without { DEP [ExtPos=DET|NUM] }"
      ],
      "description": "`det` relation without `DET` upos on the dependent",
      "level": "error"
    }
  ]
}