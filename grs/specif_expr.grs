%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
package specif_expr_init{
% For a node that is a MWE head, an empty node, which represents the MWE, is created.
  rule create_mwe_node{
    pattern{ W[_MISC_EXTPOS,_MISC_Type=MWE]}
    without{ * -[expr]-> W}
    without{ H[_MISC_Type=Title]; H -> W; W[_MISC_INTITLE=Yes]}% The node is not the daughter of a title head as part of the title.
    commands{
      add_node MWE :< W;
      shift_in W ==> MWE;
      add_edge MWE -[expr]-> W;
      MWE.upos = W._MISC_EXTPOS
    }
  }

 
% For a node that is a title head, an empty node, which represents the title, is created.
   rule create_title_node{
    pattern{ W[_MISC_EXTPOS,_MISC_Type=Title]}
    without{ * -[expr]-> W}
    commands{
      add_node T :< W;
      shift_in W ==> T;
      add_edge T -[expr]-> W;
      T.upos = PROPN
    }
  }

% For a node the POS has to be translated, a new node with the same lemma and the new POS is created.  The node is not the daughter of a title head as part of the title.
  rule create_trans_node{
    pattern{ W[_MISC_EXTPOS,_MISC_Type=Trans]}
    without{ * -[expr]-> W}
    without{ H[_MISC_Type=Title]; H -> W; W[_MISC_INTITLE=Yes]} % The node is not the daughter of a title head as part of the title.
    commands{
      add_node T :< W;
      shift_in W ==> T;
      add_edge T -[expr]-> W;
      T.upos = W._MISC_EXTPOS; T.lemma=W.lemma
    }
  }

% For a node the POS has to be translated, a new node with the same lemma and the new POS is created.  The node is the daughter of a title head as part of the title and for the title head, an empty node representing the title has been already created.
% Ex :fr-ud-train_04578 - Depuis son début en 1987 Handford a produit un total de six Où est Charlie ?
   rule create_trans_node_title{
    pattern{
      W[_MISC_EXTPOS,_MISC_Type=Trans];
       H[_MISC_Type=Title]; e: H -> W;W[_MISC_INTITLE=Yes];
       * -[expr]-> H}
    without{ * -[expr]-> W}
    commands{
      add_node T :< W;
      T.upos = W._MISC_EXTPOS;
      add_edge e: H -> T; del_edge e;
      add_edge T -[expr]-> W; T.lemma=W.lemma
    }
  }

% The source of any external dependency for a MWE or title head, or for a word that has to be translated, is moved to the empty node representing the MWE, the title or the translated word.
  rule move_dep{
    pattern{ H -[expr]-> W; e: W -[^unk@fixed|fixed|flat:name|goeswith]-> D}
    without{D[_MISC_INMWE=Yes]}
    without{D[_MISC_INTITLE=Yes]}
    commands{add_edge e: H -> D;  del_edge e}
  }

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
package specif_expr_close{
  rule del_specif_expr{
    pattern{e: E -[expr]-> W}
    commands{del_edge e; shift E ==> W; del_node E}
  }

  rule mwe_pos_raise{
    pattern{
      H [_MISC_INMWE=Yes]; H -> D;
      D[_MISC_EXTPOS,_MISC_Type=MWE]; H[!_MISC_EXTPOS]}
    commands{
      H._MISC_EXTPOS = D._MISC_EXTPOS; H._MISC_Type=MWE;
      del_feat H._MISC_INMWE;
      D._MISC_INMWE=Yes;
      del_feat D._MISC_EXTPOS; del_feat D._MISC_Type
    }
  }
   
  rule title_pos_raise{
    pattern{ H[_MISC_INTITLE=Yes]; D[_MISC_Type=Title]; H -> D}
    commands{
      H._MISC_Type = Title; H._MISC_EXTPOS=PROPN; del_feat H._MISC_INTITLE;
      D._MISC_INTITLE=Yes; del_feat D._MISC_Type; del_feat D._MISC_EXTPOS
    }
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For the internal elements of MWE, feature INMWE=Yes is replaced with the deep extension fixed on the incoming relation.
package fixed_add{
  rule add_fixed{
    pattern {e:H -> D;D[_MISC_INMWE=Yes]}
    without{H -[deep=fixed]-> D}
    commands {e.deep=fixed; del_feat D._MISC_INMWE}
  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For the internal elements of MWE,  the deep extension fixed on the incoming relation  is replaced with feature INMWE=Yes.
package fixed_remove{
  rule del_fixed{
    pattern {e:H -[deep=fixed]-> D;D[!_MISC_INMWE]}
    without { H -[1=unk]-> D}
    commands {del_feat e.deep; D._MISC_INMWE=Yes}
  }
  
}

